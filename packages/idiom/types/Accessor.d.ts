type Caller<T = any> = (o: T, ...args: any) => any;
type GetterSetter = <T extends object>(o: T, value?: any) => T[keyof T];
type Getter = <T extends object>(o: T) => T[keyof T];
type Constructor = abstract new (...args: any) => any;

export function Bind<T>(target: T, caller: Caller): Caller;
export function AsGetter(getterSetter: GetterSetter): Getter;

export module Generator {
	export function Caller(key: string): Caller;
	export function GetterCaller(getter: GetterSetter): Caller;

	export function Constructor<T extends Constructor>(
		Target: T
	): (...args: ConstructorParameters<T>) => InstanceType<T>;

	export function GetterSetter(key: string): GetterSetter;
}

export module GetterSetter {
	export const abs: GetterSetter;
	export const acos: GetterSetter;
	export const acosh: GetterSetter;
	export const add: GetterSetter;
	export const all: GetterSetter;
	export const allSettled: GetterSetter;
	export const and: GetterSetter;
	export const any: GetterSetter;
	export const apply: GetterSetter;
	export const asIntN: GetterSetter;
	export const asin: GetterSetter;
	export const asinh: GetterSetter;
	export const assign: GetterSetter;
	export const asyncIterator: GetterSetter;
	export const at: GetterSetter;
	export const atan: GetterSetter;
	export const atan2: GetterSetter;
	export const atanh: GetterSetter;
	export const asUintN: GetterSetter;
	export const BYTES_PER_ELEMENT: GetterSetter;
	export const bind: GetterSetter;
	export const buffer: GetterSetter;
	export const byteLength: GetterSetter;
	export const byteOffset: GetterSetter;
	export const Collator: GetterSetter;
	export const call: GetterSetter;
	export const cause: GetterSetter;
	export const cbrt: GetterSetter;
	export const ceil: GetterSetter;
	export const charAt: GetterSetter;
	export const charCodeAt: GetterSetter;
	export const clear: GetterSetter;
	export const clz32: GetterSetter;
	export const codePointAt: GetterSetter;
	export const compareExchange: GetterSetter;
	export const concat: GetterSetter;
	export const construct: GetterSetter;
	export const constructor: GetterSetter;
	export const copyWithin: GetterSetter;
	export const cos: GetterSetter;
	export const cosh: GetterSetter;
	export const create: GetterSetter;
	export const DateTimeFormat: GetterSetter;
	export const defineProperties: GetterSetter;
	export const defineProperty: GetterSetter;
	export const deleteProperty: GetterSetter;
	export const deref: GetterSetter;
	export const detached: GetterSetter;
	export const difference: GetterSetter;
	export const dotAll: GetterSetter;
	export const E: GetterSetter;
	export const EPSILON: GetterSetter;
	export const endsWith: GetterSetter;
	export const entries: GetterSetter;
	export const errors: GetterSetter;
	export const every: GetterSetter;
	export const exec: GetterSetter;
	export const exp: GetterSetter;
	export const expm1: GetterSetter;
	export const fill: GetterSetter;
	export const filter: GetterSetter;
	export const find: GetterSetter;
	export const findIndex: GetterSetter;
	export const findLast: GetterSetter;
	export const findLastIndex: GetterSetter;
	export const flags: GetterSetter;
	export const flat: GetterSetter;
	export const flatMap: GetterSetter;
	export const floor: GetterSetter;
	export const forEach: GetterSetter;
	export const freeze: GetterSetter;
	export const from: GetterSetter;
	export const fromAsync: GetterSetter;
	export const fromCharCode: GetterSetter;
	export const fromCodePoint: GetterSetter;
	export const fromEntries: GetterSetter;
	export const fround: GetterSetter;
	export const get: GetterSetter;
	export const getBigInt64: GetterSetter;
	export const getBigUint64: GetterSetter;
	export const getCanonicalLocales: GetterSetter;
	export const getDate: GetterSetter;
	export const getDay: GetterSetter;
	export const getFloat32: GetterSetter;
	export const getFloat64: GetterSetter;
	export const getFullYear: GetterSetter;
	export const getHours: GetterSetter;
	export const getInt16: GetterSetter;
	export const getInt32: GetterSetter;
	export const getInt8: GetterSetter;
	export const getMilliseconds: GetterSetter;
	export const getMinutes: GetterSetter;
	export const getMonth: GetterSetter;
	export const getOwnPropertyDescriptor: GetterSetter;
	export const getOwnPropertyDescriptors: GetterSetter;
	export const getOwnPropertyNames: GetterSetter;
	export const getOwnPropertySymbols: GetterSetter;
	export const getPrototypeOf: GetterSetter;
	export const getSeconds: GetterSetter;
	export const getTime: GetterSetter;
	export const getTimezoneOffset: GetterSetter;
	export const getUint16: GetterSetter;
	export const getUint32: GetterSetter;
	export const getUint8: GetterSetter;
	export const getUTCDate: GetterSetter;
	export const getUTCDay: GetterSetter;
	export const getUTCFullYear: GetterSetter;
	export const getUTCHours: GetterSetter;
	export const getUTCMilliseconds: GetterSetter;
	export const getUTCMinutes: GetterSetter;
	export const getUTCMonth: GetterSetter;
	export const getUTCSeconds: GetterSetter;
	export const global: GetterSetter;
	export const groupBy: GetterSetter;
	export const grow: GetterSetter;
	export const growable: GetterSetter;
	export const has: GetterSetter;
	export const hasIndices: GetterSetter;
	export const hasInstance: GetterSetter;
	export const hasOwn: GetterSetter;
	export const hasOwnProperty: GetterSetter;
	export const hypot: GetterSetter;
	export const ignoreCase: GetterSetter;
	export const imul: GetterSetter;
	export const includes: GetterSetter;
	export const indexOf: GetterSetter;
	export const intersection: GetterSetter;
	export const is: GetterSetter;
	export const isArray: GetterSetter;
	export const isConcatSpreadable: GetterSetter;
	export const isDisjointFrom: GetterSetter;
	export const isExtensible: GetterSetter;
	export const isFrozen: GetterSetter;
	export const isInteger: GetterSetter;
	export const isLockFree: GetterSetter;
	export const isPrototypeOf: GetterSetter;
	export const isSafeInteger: GetterSetter;
	export const isSealed: GetterSetter;
	export const isSubsetOf: GetterSetter;
	export const isSupersetOf: GetterSetter;
	export const isView: GetterSetter;
	export const isWellFormed: GetterSetter;
	export const iterator: GetterSetter;
	export const join: GetterSetter;
	export const keyFor: GetterSetter;
	export const keys: GetterSetter;
	export const ListFormat: GetterSetter;
	export const LN10: GetterSetter;
	export const LN2: GetterSetter;
	export const LOG10E: GetterSetter;
	export const LOG2E: GetterSetter;
	export const lastIndex: GetterSetter;
	export const lastIndexOf: GetterSetter;
	export const length: GetterSetter;
	export const load: GetterSetter;
	export const localeCompare: GetterSetter;
	export const log: GetterSetter;
	export const log10: GetterSetter;
	export const log1p: GetterSetter;
	export const log2: GetterSetter;
	export const MAX_SAFE_INTEGER: GetterSetter;
	export const MAX_VALUE: GetterSetter;
	export const MIN_SAFE_INTEGER: GetterSetter;
	export const MIN_VALUE: GetterSetter;
	export const map: GetterSetter;
	export const match: GetterSetter;
	export const matchAll: GetterSetter;
	export const max: GetterSetter;
	export const maxByteLength: GetterSetter;
	export const message: GetterSetter;
	export const min: GetterSetter;
	export const multiline: GetterSetter;
	export const NEGATIVE_INFINITY: GetterSetter;
	export const NumberFormat: GetterSetter;
	export const name: GetterSetter;
	export const next: GetterSetter;
	export const normalize: GetterSetter;
	export const notify: GetterSetter;
	export const now: GetterSetter;
	export const of: GetterSetter;
	export const or: GetterSetter;
	export const ownKeys: GetterSetter;
	export const PI: GetterSetter;
	export const PluralRules: GetterSetter;
	export const POSITIVE_INFINITY: GetterSetter;
	export const padEnd: GetterSetter;
	export const padStart: GetterSetter;
	export const parse: GetterSetter;
	export const pop: GetterSetter;
	export const pow: GetterSetter;
	export const preventExtensions: GetterSetter;
	export const propertyIsEnumerable: GetterSetter;
	export const prototype: GetterSetter;
	export const push: GetterSetter;
	export const RelativeTimeFormat: GetterSetter;
	export const race: GetterSetter;
	export const random: GetterSetter;
	export const raw: GetterSetter;
	export const reduce: GetterSetter;
	export const reduceRight: GetterSetter;
	export const register: GetterSetter;
	export const reject: GetterSetter;
	export const repeat: GetterSetter;
	export const replace: GetterSetter;
	export const replaceAll: GetterSetter;
	export const reserve: GetterSetter;
	export const resizable: GetterSetter;
	export const resize: GetterSetter;
	export const resolve: GetterSetter;
	export const revocable: GetterSetter;
	export const round: GetterSetter;
	export const SQRT1_2: GetterSetter;
	export const SQRT2: GetterSetter;
	export const Segmenter: GetterSetter;
	export const seal: GetterSetter;
	export const search: GetterSetter;
	export const set: GetterSetter;
	export const setBigInt64: GetterSetter;
	export const setBigUint64: GetterSetter;
	export const setDate: GetterSetter;
	export const setFloat32: GetterSetter;
	export const setFloat64: GetterSetter;
	export const setFullYear: GetterSetter;
	export const setHours: GetterSetter;
	export const setInt16: GetterSetter;
	export const setInt32: GetterSetter;
	export const setInt8: GetterSetter;
	export const setMilliseconds: GetterSetter;
	export const setMinutes: GetterSetter;
	export const setMonth: GetterSetter;
	export const setPrototypeOf: GetterSetter;
	export const setSeconds: GetterSetter;
	export const setTime: GetterSetter;
	export const setUint16: GetterSetter;
	export const setUint32: GetterSetter;
	export const setUint8: GetterSetter;
	export const setUTCDate: GetterSetter;
	export const setUTCFullYear: GetterSetter;
	export const setUTCHours: GetterSetter;
	export const setUTCMilliseconds: GetterSetter;
	export const setUTCMinutes: GetterSetter;
	export const setUTCMonth: GetterSetter;
	export const setUTCSeconds: GetterSetter;
	export const shift: GetterSetter;
	export const sign: GetterSetter;
	export const sin: GetterSetter;
	export const sinh: GetterSetter;
	export const size: GetterSetter;
	export const slice: GetterSetter;
	export const some: GetterSetter;
	export const sort: GetterSetter;
	export const source: GetterSetter;
	export const splice: GetterSetter;
	export const split: GetterSetter;
	export const species: GetterSetter;
	export const sqrt: GetterSetter;
	export const startsWith: GetterSetter;
	export const sticky: GetterSetter;
	export const store: GetterSetter;
	export const stringify: GetterSetter;
	export const sub: GetterSetter;
	export const subarray: GetterSetter;
	export const substring: GetterSetter;
	export const supportedValuesOf: GetterSetter;
	export const symmetricDifference: GetterSetter;
	export const tan: GetterSetter;
	export const tanh: GetterSetter;
	export const test: GetterSetter;
	export const then: GetterSetter;
	export const toDateString: GetterSetter;
	export const toExponential: GetterSetter;
	export const toFixed: GetterSetter;
	export const toISOString: GetterSetter;
	export const toLocaleDateString: GetterSetter;
	export const toLocaleLowerCase: GetterSetter;
	export const toLocaleUpperCase: GetterSetter;
	export const toLocaleString: GetterSetter;
	export const toLocaleTimeString: GetterSetter;
	export const toLowerCase: GetterSetter;
	export const toPrecision: GetterSetter;
	export const toPrimitive: GetterSetter;
	export const toReversed: GetterSetter;
	export const toSorted: GetterSetter;
	export const toSpliced: GetterSetter;
	export const toString: GetterSetter;
	export const toStringTag: GetterSetter;
	export const toTimeString: GetterSetter;
	export const toUpperCase: GetterSetter;
	export const toUTCString: GetterSetter;
	export const toWellFormed: GetterSetter;
	export const transfer: GetterSetter;
	export const transferToFixedLength: GetterSetter;
	export const trim: GetterSetter;
	export const trimEnd: GetterSetter;
	export const trimStart: GetterSetter;
	export const trunc: GetterSetter;
	export const UTC: GetterSetter;
	export const unicode: GetterSetter;
	export const unicodeSets: GetterSetter;
	export const union: GetterSetter;
	export const unregister: GetterSetter;
	export const unscopables: GetterSetter;
	export const unshift: GetterSetter;
	export const valueOf: GetterSetter;
	export const values: GetterSetter;
	export const wait: GetterSetter;
	export const waitAsync: GetterSetter;
	export const withResolvers: GetterSetter;
	export const xor: GetterSetter;

	const _catch: GetterSetter;
	const _delete: GetterSetter;
	const _finally: GetterSetter;
	const _for: GetterSetter;
	const _return: GetterSetter;
	const _throw: GetterSetter;
	const _with: GetterSetter;

	export {
		_catch as catch,
		_delete as delete,
		_finally as finally,
		_for as for,
		_return as return,
		_throw as throw,
		_with as with,
	}
}

export module Caller {
	export const add: Caller;
	export const apply: Caller;
	export const at: Caller;
	export const bind: Caller;
	export const call: Caller;
	export const concat: Caller;
	export const copyWithin: Caller;
	export const from: Caller;
	export const of: Caller;
	export const has: Caller;
	export const hasOwnProperty: Caller;
	export const isPrototypeOf: Caller;
	export const propertyIsEnumerable: Caller;
	export const toLocalString: Caller;
	export const toString: Caller;
	export const valueOf: Caller;
	export const entries: Caller;
	export const every: Caller;
	export const fill: Caller;
	export const filter: Caller;
	export const find: Caller;
	export const findIndex: Caller;
	export const findLast: Caller;
	export const findLastIndex: Caller;
	export const flat: Caller;
	export const flatMap: Caller;
	export const floor: Caller;
	export const forEach: Caller;
	export const includes: Caller;
	export const indexOf: Caller;
	export const join: Caller;
	export const lastIndexOf: Caller;
	export const map: Caller;
	export const pop: Caller;
	export const push: Caller;
	export const reduce: Caller;
	export const reduceRight: Caller;
	export const reserve: Caller;
	export const shift: Caller;
	export const slice: Caller;
	export const some: Caller;
	export const sort: Caller;
	export const splice: Caller;
	export const toReversed: Caller;
	export const toSorted: Caller;
	export const toSpliced: Caller;
	export const unshift: Caller;
	export const values: Caller;
	export const resize: Caller;
	export const transfer: Caller;
	export const transferToFixedLength: Caller;
	export const next: Caller;
	export const keys: Caller;
	export const set: Caller;
	export const subarray: Caller;
	export const getBigInt64: Caller;
	export const getBigUint64: Caller;
	export const getFloat32: Caller;
	export const getFloat64: Caller;
	export const getInt16: Caller;
	export const getInt32: Caller;
	export const getInt8: Caller;
	export const getUint16: Caller;
	export const getUint32: Caller;
	export const getUint8: Caller;
	export const setBigInt64: Caller;
	export const setBigUint64: Caller;
	export const setFloat32: Caller;
	export const setFloat64: Caller;
	export const setInt16: Caller;
	export const setInt32: Caller;
	export const setInt8: Caller;
	export const setUint16: Caller;
	export const setUint32: Caller;
	export const setUint8: Caller;
	export const getDate: Caller;
	export const getDay: Caller;
	export const getFullYear: Caller;
	export const getHours: Caller;
	export const getMilliseconds: Caller;
	export const getMinutes: Caller;
	export const getMonth: Caller;
	export const getSeconds: Caller;
	export const getTime: Caller;
	export const getTimezoneOffset: Caller;
	export const getUTCDate: Caller;
	export const getUTCDay: Caller;
	export const getUTCFullYear: Caller;
	export const getUTCHours: Caller;
	export const getUTCMilliseconds: Caller;
	export const getUTCMinutes: Caller;
	export const getUTCMonth: Caller;
	export const getUTCSeconds: Caller;
	export const setDate: Caller;
	export const setFullYear: Caller;
	export const setHours: Caller;
	export const setMilliseconds: Caller;
	export const setMinutes: Caller;
	export const setMonth: Caller;
	export const setSeconds: Caller;
	export const setTime: Caller;
	export const setUTCDate: Caller;
	export const setUTCFullYear: Caller;
	export const setUTCHours: Caller;
	export const setUTCMilliseconds: Caller;
	export const setUTCMinutes: Caller;
	export const setUTCMonth: Caller;
	export const setUTCSeconds: Caller;
	export const toDateString: Caller;
	export const toISOString: Caller;
	export const toLocaleDateString: Caller;
	export const toLocaleTimeString: Caller;
	export const toTimeString: Caller;
	export const toUTCString: Caller;
	export const toExponential: Caller;
	export const toFixed: Caller;
	export const toPrecision: Caller;
	export const register: Caller;
	export const unregister: Caller;
	export const clear: Caller;
	export const get: Caller;
	export const then: Caller;
	export const exec: Caller;
	export const test: Caller;
	export const difference: Caller;
	export const intersection: Caller;
	export const isDisjointFrom: Caller;
	export const isSubsetOf: Caller;
	export const isSupersetOf: Caller;
	export const symmetricDifference: Caller;
	export const union: Caller;
	export const grow: Caller;
	export const charAt: Caller;
	export const charCodeAt: Caller;
	export const codePointAt: Caller;
	export const endsWith: Caller;
	export const isWellFormed: Caller;
	export const localeCompare: Caller;
	export const match: Caller;
	export const matchAll: Caller;
	export const normalize: Caller;
	export const padEnd: Caller;
	export const padStart: Caller;
	export const repeat: Caller;
	export const replace: Caller;
	export const replaceAll: Caller;
	export const search: Caller;
	export const split: Caller;
	export const startsWith: Caller;
	export const substring: Caller;
	export const toLocaleLowerCase: Caller;
	export const toLocaleUpperCase: Caller;
	export const toLowerCase: Caller;
	export const toUpperCase: Caller;
	export const toWellFormed: Caller;
	export const trim: Caller;
	export const trimEnd: Caller;
	export const trimStart: Caller;
	export const deref: Caller;

	const _catch: Caller;
	const _delete: Caller;
	const _finally: Caller;
	const _return: Caller;
	const _throw: Caller;
	const _with: Caller;

	export {
		_catch as catch,
		_delete as delete,
		_finally as finally,
		_return as return,
		_throw as throw,
		_with as with,
	}
}
